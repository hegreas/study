#include <errno.h>  
#include <unistd.h>  
#include <fcntl.h>  
#include <mqueue.h>  
#include <string.h>
#include <stdio.h>
#include <stdlib.h>
  
int main()  
{  
    mqd_t mqID;  
    mqID = mq_open("/anonymQueue", O_RDWR | O_CREAT | O_EXCL, 0666, NULL);  
			  
    if (mqID < 0)  
    {  
        if (errno == EEXIST)  
        {  
            mq_unlink("/anonymQueue");  
            mqID = mq_open("/anonymQueue", O_RDWR | O_CREAT, 0666, NULL);  
        }  
        else  
        {  
			printf("open message queue error..., %s\n", strerror(errno));
            return -1;  
        }  
    }  
				  
    if (fork() == 0)  
    {  
        struct mq_attr mqAttr;  
        mq_getattr(mqID, &mqAttr);  
		  
        //char *buf = new char[mqAttr.mq_msgsize];  
		char buf[8192];
											  
        for (int i = 1; i <= 5; ++i)  
        {  
            if (mq_receive(mqID, buf, mqAttr.mq_msgsize, NULL) < 0)  
            {  
				printf("receive message failed.\n");
				printf("error info: %s\n", strerror(errno));
                continue;  
            }  
										  
			printf("receive message : %d\n", i);
            //cout<<"receive message "<<i<<": "<<buf<<endl;     
        }  
        exit(0);  
    }  
 
    char msg[] = "yuki";  
    for (int i = 1; i <= 5; ++i)  
    {  
        if (mq_send(mqID, msg, sizeof(msg), i) < 0)  
        {  
			printf("send message : %d failed\n", i);
			printf("error info: %s\n", strerror(errno));
        }  

		printf("send message %d success.\n", i);
										  
        sleep(1);  
    }  
}   
